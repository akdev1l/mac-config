def pad_string(padding; padding_char): (. + (padding_char * ((padding | tonumber) - (. | length))));

def colors:
  {
    "black": "\u001b[30m",
    "red": "\u001b[31m",
    "green": "\u001b[32m",
    "yellow": "\u001b[33m",
    "blue": "\u001b[34m",
    "magenta": "\u001b[35m",
    "cyan": "\u001b[36m",
    "white": "\u001b[37m",
    "reset": "\u001b[0m",
  };
def bgcolors:
  {
    "black": "\u001b[40m",
    "red": "\u001b[41m",
    "green": "\u001b[42m",
    "yellow": "\u001b[43m",
    "blue": "\u001b[44m",
    "magenta": "\u001b[45m",
    "cyan": "\u001b[46m",
    "white": "\u001b[47m",
    "reset": "\u001b[0m",
  };
def texteffects:
  {
    "bold": {
      "start": "\u001b[1m",
      "end": "\u001b[21m"
    },
    "blinking": {
      "start": "\u001b[5m",
      "end": "\u001b[25m"
    },
    "italics": {
      "start": "\u001b[3m",
      "end": "\u001b[23m"
    },
    "underline": {
      "start": "\u001b[4m",
      "end": "\u001b[24m"
    },
    "strikethrough": {
      "start": "\u001b[9m",
      "end": "\u001b[29m"
    }
  };

def apply_effects(color; bgcolor): "\(bgcolors[bgcolor])\(colors[color])\(.)\(colors.reset)\(bgcolors.reset)";
def apply_effects(color; bgcolor; effect): "\(texteffects[effect].start)\(bgcolors[bgcolor])\(colors[color])\(.)\(colors.reset)\(bgcolors.reset)\(texteffects[effect].end)";

def format_header: .;
def print_table(headers): [ (headers.[] | format_header)] | @tsv;

def print_table: [[ (.[0] | keys | .[] | format_header) ], (.[] | [ (. | to_entries[].value) ]) ] | .[]| @tsv;
def print_table_csv: [[ (.[0] | keys | .[] | format_header) ], (.[] | [ (. | to_entries[].value) ]) ] | .[]| @csv;
